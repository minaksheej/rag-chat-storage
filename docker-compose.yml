version: "3.8"

services:
  db:
    image: postgres:15
    container_name: rag-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ragdb}
      POSTGRES_USER: ${POSTGRES_USER:-raguser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ragpass}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-raguser} -d ${POSTGRES_DB:-ragdb}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: rag-chat-storage
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB:-ragdb}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-raguser}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-ragpass}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  pgadmin:
    image: dpage/pgadmin4
    container_name: rag-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
    ports:
      - "8081:80"
    depends_on:
      - db
    restart: unless-stopped

volumes:
  pgdata: {}
